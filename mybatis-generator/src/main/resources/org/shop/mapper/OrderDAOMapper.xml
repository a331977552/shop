<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shop.mapper.OrderDAOMapper">
  <resultMap id="BaseResultMap" type="org.shop.model.dao.OrderDAO">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="pay_method" jdbcType="CHAR" property="payMethod" />
    <result column="order_source" jdbcType="CHAR" property="orderSource" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="buyer_comment" jdbcType="VARCHAR" property="buyerComment" />
    <result column="seller_comment" jdbcType="VARCHAR" property="sellerComment" />
    <result column="auto_confirm_days" jdbcType="INTEGER" property="autoConfirmDays" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, total_price, status, created_time, updated_time, pay_method, order_source, 
    order_num, buyer_comment, seller_comment, auto_confirm_days
  </sql>
  <select id="selectByExample" parameterType="org.shop.model.dao.OrderDAOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_order
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from s_order
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.shop.model.dao.OrderDAOExample">
    delete from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.shop.model.dao.OrderDAO">
    insert into s_order (id, customer_id, total_price, 
      status, created_time, updated_time, 
      pay_method, order_source, order_num, 
      buyer_comment, seller_comment, auto_confirm_days
      )
    values (#{id,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{totalPrice,jdbcType=DECIMAL}, 
      #{status,jdbcType=CHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{payMethod,jdbcType=CHAR}, #{orderSource,jdbcType=CHAR}, #{orderNum,jdbcType=VARCHAR}, 
      #{buyerComment,jdbcType=VARCHAR}, #{sellerComment,jdbcType=VARCHAR}, #{autoConfirmDays,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.shop.model.dao.OrderDAO">
    insert into s_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="payMethod != null">
        pay_method,
      </if>
      <if test="orderSource != null">
        order_source,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="buyerComment != null">
        buyer_comment,
      </if>
      <if test="sellerComment != null">
        seller_comment,
      </if>
      <if test="autoConfirmDays != null">
        auto_confirm_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null">
        #{payMethod,jdbcType=CHAR},
      </if>
      <if test="orderSource != null">
        #{orderSource,jdbcType=CHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="buyerComment != null">
        #{buyerComment,jdbcType=VARCHAR},
      </if>
      <if test="sellerComment != null">
        #{sellerComment,jdbcType=VARCHAR},
      </if>
      <if test="autoConfirmDays != null">
        #{autoConfirmDays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.shop.model.dao.OrderDAOExample" resultType="java.lang.Long">
    select count(*) from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=CHAR},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payMethod != null">
        pay_method = #{record.payMethod,jdbcType=CHAR},
      </if>
      <if test="record.orderSource != null">
        order_source = #{record.orderSource,jdbcType=CHAR},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerComment != null">
        buyer_comment = #{record.buyerComment,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerComment != null">
        seller_comment = #{record.sellerComment,jdbcType=VARCHAR},
      </if>
      <if test="record.autoConfirmDays != null">
        auto_confirm_days = #{record.autoConfirmDays,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_order
    set id = #{record.id,jdbcType=CHAR},
      customer_id = #{record.customerId,jdbcType=CHAR},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=CHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      pay_method = #{record.payMethod,jdbcType=CHAR},
      order_source = #{record.orderSource,jdbcType=CHAR},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      buyer_comment = #{record.buyerComment,jdbcType=VARCHAR},
      seller_comment = #{record.sellerComment,jdbcType=VARCHAR},
      auto_confirm_days = #{record.autoConfirmDays,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.shop.model.dao.OrderDAO">
    update s_order
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMethod != null">
        pay_method = #{payMethod,jdbcType=CHAR},
      </if>
      <if test="orderSource != null">
        order_source = #{orderSource,jdbcType=CHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="buyerComment != null">
        buyer_comment = #{buyerComment,jdbcType=VARCHAR},
      </if>
      <if test="sellerComment != null">
        seller_comment = #{sellerComment,jdbcType=VARCHAR},
      </if>
      <if test="autoConfirmDays != null">
        auto_confirm_days = #{autoConfirmDays,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.shop.model.dao.OrderDAO">
    update s_order
    set customer_id = #{customerId,jdbcType=CHAR},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      status = #{status,jdbcType=CHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      pay_method = #{payMethod,jdbcType=CHAR},
      order_source = #{orderSource,jdbcType=CHAR},
      order_num = #{orderNum,jdbcType=VARCHAR},
      buyer_comment = #{buyerComment,jdbcType=VARCHAR},
      seller_comment = #{sellerComment,jdbcType=VARCHAR},
      auto_confirm_days = #{autoConfirmDays,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>