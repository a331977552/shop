<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shop.mapper.OrderItemDAOMapper">
  <resultMap id="BaseResultMap" type="org.shop.model.dao.OrderItemDAO">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="product_id" jdbcType="CHAR" property="productId" />
    <result column="snapshot_product_id" jdbcType="CHAR" property="snapshotProductId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, order_id, quantity, product_id, snapshot_product_id, price, created_time, 
    updated_time, unit_price
  </sql>
  <select id="selectByExample" parameterType="org.shop.model.dao.OrderItemDAOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_item
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.shop.model.dao.OrderItemDAOExample">
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.shop.model.dao.OrderItemDAO">
    insert into order_item (id, customer_id, order_id, 
      quantity, product_id, snapshot_product_id, 
      price, created_time, updated_time, 
      unit_price)
    values (#{id,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, 
      #{quantity,jdbcType=INTEGER}, #{productId,jdbcType=CHAR}, #{snapshotProductId,jdbcType=CHAR}, 
      #{price,jdbcType=DECIMAL}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{unitPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.shop.model.dao.OrderItemDAO">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="snapshotProductId != null">
        snapshot_product_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=CHAR},
      </if>
      <if test="snapshotProductId != null">
        #{snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.shop.model.dao.OrderItemDAOExample" resultType="java.lang.Long">
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=CHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=CHAR},
      </if>
      <if test="record.snapshotProductId != null">
        snapshot_product_id = #{record.snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_item
    set id = #{record.id,jdbcType=CHAR},
      customer_id = #{record.customerId,jdbcType=CHAR},
      order_id = #{record.orderId,jdbcType=CHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=CHAR},
      snapshot_product_id = #{record.snapshotProductId,jdbcType=CHAR},
      price = #{record.price,jdbcType=DECIMAL},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.shop.model.dao.OrderItemDAO">
    update order_item
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=CHAR},
      </if>
      <if test="snapshotProductId != null">
        snapshot_product_id = #{snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.shop.model.dao.OrderItemDAO">
    update order_item
    set customer_id = #{customerId,jdbcType=CHAR},
      order_id = #{orderId,jdbcType=CHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=CHAR},
      snapshot_product_id = #{snapshotProductId,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      unit_price = #{unitPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="org.shop.model.dao.OrderItemDAO">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="product_id" jdbcType="CHAR" property="productId" />
    <result column="snapshot_product_id" jdbcType="CHAR" property="snapshotProductId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, order_id, quantity, product_id, snapshot_product_id, price, created_time, 
    updated_time
  </sql>
  <select id="selectByExample" parameterType="org.shop.model.dao.OrderItemDAOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_item
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.shop.model.dao.OrderItemDAOExample">
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.shop.model.dao.OrderItemDAO">
    insert into order_item (id, customer_id, order_id, 
      quantity, product_id, snapshot_product_id, 
      price, created_time, updated_time
      )
    values (#{id,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, 
      #{quantity,jdbcType=INTEGER}, #{productId,jdbcType=CHAR}, #{snapshotProductId,jdbcType=CHAR}, 
      #{price,jdbcType=DECIMAL}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.shop.model.dao.OrderItemDAO">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="snapshotProductId != null">
        snapshot_product_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=CHAR},
      </if>
      <if test="snapshotProductId != null">
        #{snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.shop.model.dao.OrderItemDAOExample" resultType="java.lang.Long">
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=CHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=CHAR},
      </if>
      <if test="record.snapshotProductId != null">
        snapshot_product_id = #{record.snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_item
    set id = #{record.id,jdbcType=CHAR},
      customer_id = #{record.customerId,jdbcType=CHAR},
      order_id = #{record.orderId,jdbcType=CHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=CHAR},
      snapshot_product_id = #{record.snapshotProductId,jdbcType=CHAR},
      price = #{record.price,jdbcType=DECIMAL},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.shop.model.dao.OrderItemDAO">
    update order_item
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=CHAR},
      </if>
      <if test="snapshotProductId != null">
        snapshot_product_id = #{snapshotProductId,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.shop.model.dao.OrderItemDAO">
    update order_item
    set customer_id = #{customerId,jdbcType=CHAR},
      order_id = #{orderId,jdbcType=CHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=CHAR},
      snapshot_product_id = #{snapshotProductId,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>